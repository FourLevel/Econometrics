setwd("~/")
setwd("D:/GitHub/Econometrics")
# 讀取必要的 R 套件
library(readr)
library(dplyr)
library(car)  # 用於 VIF 計算
library(lmtest)  # 用於 Breusch-Pagan 檢定
library(plm)  # 用於 Panel Data 分析
library(Formula)
# 讀取檔案
data <- read.csv("銀行資料_丟迴歸分析_20240523.csv")
# 轉換變數名稱以符合 R 的命名慣例
colnames(data) <- c("id", "company_name", "ym", "time", "establishment_year", "roa", "s",
"equity_to_assets_100", "roa_std", "z_score", "total_assets", "ln_total_assets",
"net_income", "ln_net_income", "pb_ratio", "debt_ratio", "company_age",
"board_ownership", "manager_ownership", "financial_crisis", "covid_period")
# 確保 financial_crisis 和 covid_period 為 factor 型態，以作為 dummy variables
data$financial_crisis <- as.factor(data$financial_crisis)
data$covid_period <- as.factor(data$covid_period)
# 標準化
data$standardized_total_assets <- scale(data$total_assets)
data$standardized_net_income <- scale(data$net_income)
# (1) 進行 VIF 檢定
# 建置線性迴歸模型
model <- lm(z_score ~ standardized_total_assets + ln_net_income + pb_ratio + debt_ratio + company_age +
board_ownership + manager_ownership + financial_crisis + covid_period, data = data)
# 計算 VIF
vif_values <- vif(model)
print(vif_values)
summary(model)
model_3 <- lm(z_score ~ standardized_total_assets + pb_ratio + debt_ratio +
company_age + manager_ownership + financial_crisis, data = data)
summary(model_3)
bp_test_3 <- bptest(model_3)
print(bp_test_3)
# model 3 進行 Hausman 檢定
# 將資料轉換為 Panel Data 格式
pdata <- pdata.frame(data, index = c("id", "time"))
# 建置固定效應模型
fe_model_3 <- plm(z_score ~ standardized_total_assets + pb_ratio + debt_ratio +
company_age + manager_ownership + financial_crisis, data = pdata, model = "within")
# 建置隨機效應模型
re_model_3 <- plm(z_score ~ standardized_total_assets + pb_ratio + debt_ratio +
company_age + manager_ownership + financial_crisis, data = pdata, model = "random")
# 進行 Hausman 檢定
hausman_test_3 <- phtest(fe_model_3, re_model_3)
print(hausman_test_3)
# model 3 進行固定效應模型分析
summary(fe_model_3)
# 載入必要的套件
library(readr)
library(dplyr)
library(ggplot2)
library(car)
library(lmtest)
library(plm)
library(broom)
library(readr)
library(dplyr)
library(ggplot2)
library(car)
library(lmtest)
library(plm)
library(broom)
# 讀取 CSV 檔案
file_path <- '銀行資料_丟迴歸分析_20240523.csv'
data <- read_csv(file_path)
df <- data %>%
select(公司代碼, 年, Z_score = Z_score, 資產總額, 淨收益, 當季季底P_B = 當季季底P_B,
負債比率, 公司年齡, 董事總持股數 = 董事總持股數, 經理人總持股 = 經理人總持股,
是否在金融危機時期, 是否在COVID時期) %>%
rename(company_code = 公司代碼, year = 年, z_score = Z_score, total_assets = 資產總額,
net_income = 淨收益, pb_ratio = 當季季底P_B, debt_ratio = 負債比率,
company_age = 公司年齡, shareholders_percentage = 董事總持股數,
managers_percentage = 經理人總持股, crisis_period = 是否在金融危機時期,
covid_period = 是否在COVID時期)
View(data)
View(data)
df <- data %>%
select(公司代碼, 年, Z-score, 資產總額, 淨收益, 當季季底P_B = 當季季底P_B,
負債比率, 公司年齡, 董事總持股數 = 董事總持股數, 經理人總持股 = 經理人總持股,
是否在金融危機時期, 是否在COVID時期) %>%
rename(company_code = 公司代碼, year = 年, z_score = Z_score, total_assets = 資產總額,
net_income = 淨收益, pb_ratio = 當季季底P_B, debt_ratio = 負債比率,
company_age = 公司年齡, shareholders_percentage = 董事總持股數,
managers_percentage = 經理人總持股, crisis_period = 是否在金融危機時期,
covid_period = 是否在COVID時期)
df <- data %>%
select(公司代碼, 年, Z_score = z-score, 資產總額, 淨收益, 當季季底P_B = 當季季底P_B,
負債比率, 公司年齡, 董事總持股數 = 董事總持股數, 經理人總持股 = 經理人總持股,
是否在金融危機時期, 是否在COVID時期) %>%
rename(company_code = 公司代碼, year = 年, z_score = Z_score, total_assets = 資產總額,
net_income = 淨收益, pb_ratio = 當季季底P_B, debt_ratio = 負債比率,
company_age = 公司年齡, shareholders_percentage = 董事總持股數,
managers_percentage = 經理人總持股, crisis_period = 是否在金融危機時期,
covid_period = 是否在COVID時期)
df <- data %>%
select(公司代碼, 年, z-score = Z_score, 資產總額, 淨收益, 當季季底P_B = 當季季底P_B,
df <- data %>%
select(公司代碼, 年, Z_score = Z_score, 資產總額, 淨收益, 當季季底P_B = 當季季底P_B,
負債比率, 公司年齡, 董事總持股數 = 董事總持股數, 經理人總持股 = 經理人總持股,
是否在金融危機時期, 是否在COVID時期) %>%
rename(company_code = 公司代碼, year = 年, z_score = Z_score, total_assets = 資產總額,
net_income = 淨收益, pb_ratio = 當季季底P_B, debt_ratio = 負債比率,
company_age = 公司年齡, shareholders_percentage = 董事總持股數,
managers_percentage = 經理人總持股, crisis_period = 是否在金融危機時期,
covid_period = 是否在COVID時期)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
View(data)
colnames(data) <- c("id", "company_name", "ym", "time", "establishment_year", "roa", "s",
"equity_to_assets_100", "roa_std", "z_score", "total_assets", "ln_total_assets",
"net_income", "ln_net_income", "pb_ratio", "debt_ratio", "company_age",
"board_ownership", "manager_ownership", "financial_crisis", "covid_period")
View(data)
# 選擇變數
colnames(data) <- c("id", "company_code", "ym", "year", "establishment_year", "roa", "s",
"equity_to_assets_100", "roa_std", "z_score", "total_assets", "ln_total_assets",
"net_income", "ln_net_income", "pb_ratio", "debt_ratio", "company_age",
"shareholders_percentage", "managers_percentage", "crisis_period", "covid_period")
df <- df %>%
group_by(company_code, year)
# 標準化數量變數
df <- df %>%
mutate(across(c(total_assets, net_income, pb_ratio, debt_ratio, company_age,
shareholders_percentage, managers_percentage),
~ (.-mean(.))/sd(.), .names = "std_{col}"))
# 設定 Panel Data
df <- data %>%
group_by(company_code, year)
df <- data %>%
mutate(across(c(total_assets, net_income, pb_ratio, debt_ratio, company_age,
shareholders_percentage, managers_percentage),
~ (.-mean(.))/sd(.), .names = "std_{col}"))
y <- df$z_score
X <- df %>%
select(starts_with("std_"), crisis_period, covid_period)
X_model_1 <- df %>%
select(std_total_assets, std_pb_ratio, std_debt_ratio, std_company_age,
std_managers_percentage, crisis_period)
ggplot(df, aes(x = std_total_assets, y = z_score)) +
geom_point() +
labs(title = "std_total_assets vs Z-score", x = "std_total_assets", y = "Z-score")
df_long <- df %>%
pivot_longer(cols = starts_with("std_"), names_to = "variable", values_to = "value")
library(tidyr)
# 繪製每個標準化變數與 z_score 的散佈圖
df_long <- df %>%
pivot_longer(cols = starts_with("std_"), names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point() +
facet_wrap(~ variable, scales = "free_x") +
labs(title = "標準化變數 vs Z-score", x = "標準化變數", y = "Z-score")
df_long <- df %>%
pivot_longer(cols = starts_with("std_"), names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point() +
facet_wrap(~ variable, scales = "free_x") +
labs(title = "Standardized Variables vs Z-score", x = "Standardized Variables", y = "Z-score")
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point(color = "blue", shape = 16, alpha = 0.6) +  # 調整點的顏色、形狀和透明度
facet_wrap(~ variable, scales = "free_x") +
labs(title = "標準化變數 vs Z-score", x = "標準化變數", y = "Z-score") +
theme_minimal() +  # 使用簡約主題
theme(
plot.title = element_text(size = 14, face = "bold"),  # 調整標題字體大小和樣式
axis.title = element_text(size = 12),  # 調整軸標題字體大小
strip.text = element_text(size = 10)  # 調整分面標題字體大小
)
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point(color = "blue", shape = 16, alpha = 0.6) +  # 調整點的顏色、形狀和透明度
facet_wrap(~ variable, scales = "free_x") +
labs(title = "Standardized Variables vs Z-score", x = "Standardized", y = "Z-score") +
theme_economist() +  # 使用簡約主題
theme(
plot.title = element_text(size = 14, face = "bold"),  # 調整標題字體大小和樣式
axis.title = element_text(size = 12),  # 調整軸標題字體大小
strip.text = element_text(size = 10)  # 調整分面標題字體大小
)
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point(color = "blue", shape = 16, alpha = 0.6) +  # 調整點的顏色、形狀和透明度
facet_wrap(~ variable, scales = "free_x") +
labs(title = "Standardized Variables vs Z-score", x = "Standardized", y = "Z-score") +
theme_economist() +  # 使用簡約主題
theme(
plot.title = element_text(size = 14, face = "bold"),  # 調整標題字體大小和樣式
axis.title = element_text(size = 12),  # 調整軸標題字體大小
strip.text = element_text(size = 10)  # 調整分面標題字體大小
)
df_long <- df %>%
pivot_longer(cols = starts_with("std_"), names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point(color = "blue", shape = 16, alpha = 0.6) +  # 調整點的顏色、形狀和透明度
facet_wrap(~ variable, scales = "free_x") +
labs(title = "Standardized Variables vs Z-score", x = "Standardized Variables", y = "Z-score") +
theme_economist()
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point(color = "blue", shape = 16, alpha = 0.6) +  # 調整點的顏色、形狀和透明度
facet_wrap(~ variable, scales = "free_x") +
labs(title = "Standardized Variables vs Z-score", x = "Standardized Variables", y = "Z-score") +
theme_wsj()
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point(color = "blue", shape = 16, alpha = 0.6) +  # 調整點的顏色、形狀和透明度
facet_wrap(~ variable, scales = "free_x") +
labs(title = "標準化變數 vs Z-score", x = "標準化變數", y = "Z-score") +
theme_minimal() +  # 使用簡約主題
theme(
plot.title = element_text(size = 14, face = "bold"),  # 調整標題字體大小和樣式
axis.title = element_text(size = 12),  # 調整軸標題字體大小
strip.text = element_text(size = 10)  # 調整分面標題字體大小
)
ggplot(df_long, aes(x = value, y = z_score)) +
geom_point(color = "blue", shape = 16, alpha = 0.6) +  # 調整點的顏色、形狀和透明度
facet_wrap(~ variable, scales = "free_x") +
labs(title = "Standardized Variables vs Z-score", x = "Standardized Variables", y = "Z-score") +
theme_minimal() +  # 使用簡約主題
theme(
plot.title = element_text(size = 14, face = "bold"),  # 調整標題字體大小和樣式
axis.title = element_text(size = 12),  # 調整軸標題字體大小
strip.text = element_text(size = 10)  # 調整分面標題字體大小
)
